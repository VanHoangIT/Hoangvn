import sys
import os

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from app import create_app, db
from app.models import User, Category, Product, Banner, Blog, FAQ, Contact
import datetime

app = create_app()

with app.app_context():
    print("üöÄ B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu...")

    # ==================== ADMIN USER ====================
    if not User.query.filter_by(email="admin@catsay.vn").first():
        admin = User(
            username="admin",
            email="admin@example.com",
            is_admin=True
        )
        admin.set_password("admin123")
        db.session.add(admin)
        print("‚úÖ Admin user created")
    else:
        print("‚ö†Ô∏è  Admin already exists")

    db.session.commit()

    # ==================== CATEGORIES ====================
    categories_data = [
        {
            'name': 'C√°t X√¢y D·ª±ng',
            'slug': 'cat-xay-dung',
            'description': 'C√°t x√¢y d·ª±ng ch·∫•t l∆∞·ª£ng cao cho c√¥ng tr√¨nh'
        },
        {
            'name': 'C√°t T√¥',
            'slug': 'cat-to',
            'description': 'C√°t t√¥ m·ªãn, ph√π h·ª£p ho√†n thi·ªán b·ªÅ m·∫∑t'
        },
        {
            'name': 'C√°t S√†ng',
            'slug': 'cat-sang',
            'description': 'C√°t s√†ng ƒë·∫°t chu·∫©n, ƒë·ªô m·ªãn cao'
        },
        {
            'name': 'C√°t Th√¥',
            'slug': 'cat-tho',
            'description': 'C√°t th√¥ d√πng cho m√≥ng, ƒë·ªï b√™ t√¥ng'
        }
    ]

    for cat_data in categories_data:
        if not Category.query.filter_by(slug=cat_data['slug']).first():
            cat = Category(**cat_data, is_active=True)
            db.session.add(cat)
            print(f"‚úÖ Category: {cat_data['name']}")

    db.session.commit()

    # ==================== PRODUCTS ====================
    products_data = [
        {
            'name': 'C√°t X√¢y D·ª±ng H·∫°t To',
            'slug': 'cat-xay-dung-hat-to',
            'description': 'C√°t x√¢y d·ª±ng h·∫°t to, ƒë·ªô b√°m d√≠nh cao, ph√π h·ª£p x√¢y t∆∞·ªùng, ƒë·ªï m√≥ng',
            'price': 180000,
            'old_price': 200000,
            'category_id': 1,
            'is_featured': True
        },
        {
            'name': 'C√°t X√¢y D·ª±ng H·∫°t V·ª´a',
            'slug': 'cat-xay-dung-hat-vua',
            'description': 'C√°t x√¢y d·ª±ng h·∫°t v·ª´a, ƒëa nƒÉng cho m·ªçi c√¥ng tr√¨nh',
            'price': 170000,
            'category_id': 1,
            'is_featured': True
        },
        {
            'name': 'C√°t T√¥ T∆∞·ªùng M·ªãn',
            'slug': 'cat-to-tuong-min',
            'description': 'C√°t t√¥ m·ªãn, ƒë·ªô m·ªãn cao, b·ªÅ m·∫∑t ho√†n thi·ªán ƒë·∫πp',
            'price': 190000,
            'old_price': 210000,
            'category_id': 2,
            'is_featured': True
        },
        {
            'name': 'C√°t T√¥ Ngo·∫°i Th·∫•t',
            'slug': 'cat-to-ngoai-that',
            'description': 'C√°t t√¥ chuy√™n d·ª•ng ngo·∫°i th·∫•t, ch·ªëng th·∫•m t·ªët',
            'price': 195000,
            'category_id': 2
        },
        {
            'name': 'C√°t S√†ng Cao C·∫•p',
            'slug': 'cat-sang-cao-cap',
            'description': 'C√°t s√†ng qua nhi·ªÅu c√¥ng ƒëo·∫°n, ƒë·∫°t ti√™u chu·∫©n cao',
            'price': 210000,
            'category_id': 3
        },
        {
            'name': 'C√°t Th√¥ ƒê·ªï M√≥ng',
            'slug': 'cat-tho-do-mong',
            'description': 'C√°t th√¥ chuy√™n d·ª•ng ƒë·ªï m√≥ng, k·∫øt c·∫•u ch·ªãu l·ª±c',
            'price': 160000,
            'category_id': 4
        },
        {
            'name': 'C√°t Th√¥ ƒê·ªï B√™ T√¥ng',
            'slug': 'cat-tho-do-be-tong',
            'description': 'C√°t th√¥ cho b√™ t√¥ng, ƒë·ªô b·ªÅn cao',
            'price': 165000,
            'category_id': 4
        }
    ]

    for prod_data in products_data:
        if not Product.query.filter_by(slug=prod_data['slug']).first():
            prod = Product(**prod_data, is_active=True)
            db.session.add(prod)
            print(f"‚úÖ Product: {prod_data['name']}")

    db.session.commit()

    # ==================== BANNERS ====================
    banners_data = [
        {
            'title': 'C√°t X√¢y D·ª±ng Ch·∫•t L∆∞·ª£ng Cao',
            'subtitle': 'Gi√° t·ªët nh·∫•t th·ªã tr∆∞·ªùng - Giao h√†ng nhanh ch√≥ng',
            'button_text': 'Xem Ngay',
            'link': '/products',
            'order': 1
        },
        {
            'title': 'C√°t T√¥ M·ªãn - Ho√†n Thi·ªán Ho√†n H·∫£o',
            'subtitle': 'Chuy√™n cung c·∫•p c√°t t√¥ cho c√¥ng tr√¨nh l·ªõn nh·ªè',
            'button_text': 'Li√™n H·ªá',
            'link': '/contact',
            'order': 2
        }
    ]

    for banner_data in banners_data:
        if not Banner.query.filter_by(title=banner_data['title']).first():
            banner = Banner(**banner_data, is_active=True)
            db.session.add(banner)
            print(f"‚úÖ Banner: {banner_data['title']}")

    db.session.commit()

    # ==================== BLOGS ====================
    blogs_data = [
        {
            'title': 'C√°ch ch·ªçn c√°t x√¢y d·ª±ng ch·∫•t l∆∞·ª£ng cho c√¥ng tr√¨nh',
            'slug': 'cach-chon-cat-xay-dung-chat-luong',
            'excerpt': 'H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch ch·ªçn c√°t x√¢y d·ª±ng ƒë·∫°t chu·∫©n, ph√π h·ª£p v·ªõi t·ª´ng lo·∫°i c√¥ng tr√¨nh',
            'content': '''<p>C√°t x√¢y d·ª±ng l√† v·∫≠t li·ªáu quan tr·ªçng, chi·∫øm 30-40% th√†nh ph·∫ßn trong v·ªØa v√† b√™ t√¥ng. Vi·ªác ch·ªçn c√°t ƒë√∫ng chu·∫©n ·∫£nh h∆∞·ªüng tr·ª±c ti·∫øp ƒë·∫øn ch·∫•t l∆∞·ª£ng c√¥ng tr√¨nh.</p>
            <h2>Ti√™u ch√≠ ch·ªçn c√°t x√¢y d·ª±ng</h2>
            <p>1. <strong>ƒê·ªô s·∫°ch:</strong> C√°t ph·∫£i s·∫°ch, kh√¥ng l·∫´n b√πn, ƒë·∫•t, t·∫°p ch·∫•t h·ªØu c∆°</p>
            <p>2. <strong>H·∫°t c√°t:</strong> K√≠ch th∆∞·ªõc h·∫°t ƒë·ªÅu, kh√¥ng qu√° m·ªãn ho·∫∑c qu√° th√¥</p>
            <p>3. <strong>M√†u s·∫Øc:</strong> C√°t t·ªët c√≥ m√†u v√†ng nh·∫°t, kh√¥ng ƒëen s·∫´m</p>
            <h2>Ph√¢n lo·∫°i c√°t x√¢y d·ª±ng</h2>
            <p>- C√°t th√¥: d√πng ƒë·ªï m√≥ng, b√™ t√¥ng k·∫øt c·∫•u</p>
            <p>- C√°t v·ª´a: x√¢y t∆∞·ªùng, tr√°t t∆∞·ªùng th√¥</p>
            <p>- C√°t m·ªãn: t√¥ t∆∞·ªùng, ho√†n thi·ªán b·ªÅ m·∫∑t</p>''',
            'author': 'Admin',
            'is_featured': True,
            'focus_keyword': 'c√°t x√¢y d·ª±ng',
            'meta_title': 'C√°ch ch·ªçn c√°t x√¢y d·ª±ng ch·∫•t l∆∞·ª£ng | C√°t S·∫•y',
            'meta_description': 'H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch ch·ªçn c√°t x√¢y d·ª±ng ƒë·∫°t chu·∫©n cho c√¥ng tr√¨nh. T∆∞ v·∫•n mi·ªÖn ph√≠, gi√° t·ªët nh·∫•t th·ªã tr∆∞·ªùng.'
        },
        {
            'title': 'Ph√¢n bi·ªát c√°t t√¥ v√† c√°t x√¢y - Ch·ªçn lo·∫°i n√†o cho c√¥ng tr√¨nh?',
            'slug': 'phan-biet-cat-to-va-cat-xay',
            'excerpt': 'So s√°nh chi ti·∫øt gi·ªØa c√°t t√¥ v√† c√°t x√¢y, gi√∫p b·∫°n l·ª±a ch·ªçn ƒë√∫ng lo·∫°i c√°t cho c√¥ng tr√¨nh',
            'content': '''<p>Nhi·ªÅu ng∆∞·ªùi th·∫Øc m·∫Øc v·ªÅ s·ª± kh√°c bi·ªát gi·ªØa c√°t t√¥ v√† c√°t x√¢y. B√†i vi·∫øt n√†y s·∫Ω gi·∫£i ƒë√°p chi ti·∫øt.</p>
            <h2>C√°t x√¢y l√† g√¨?</h2>
            <p>C√°t x√¢y c√≥ h·∫°t to h∆°n, ƒë·ªô b√°m d√≠nh cao, d√πng cho c√°c c√¥ng ƒëo·∫°n x√¢y g·∫°ch, ƒë·ªï m√≥ng, l√†m v·ªØa.</p>
            <h2>C√°t t√¥ l√† g√¨?</h2>
            <p>C√°t t√¥ c√≥ h·∫°t m·ªãn h∆°n, ƒë∆∞·ª£c s√†ng k·ªπ, d√πng cho c√¥ng ƒëo·∫°n ho√†n thi·ªán b·ªÅ m·∫∑t t∆∞·ªùng.</p>
            <h2>N√™n ch·ªçn lo·∫°i n√†o?</h2>
            <p>- X√¢y t∆∞·ªùng g·∫°ch ‚Üí d√πng c√°t x√¢y</p>
            <p>- T√¥ t∆∞·ªùng trong nh√† ‚Üí d√πng c√°t t√¥ m·ªãn</p>
            <p>- T√¥ t∆∞·ªùng ngo√†i ‚Üí d√πng c√°t t√¥ c√≥ ƒë·ªô h·∫°t v·ª´a</p>''',
            'author': 'Admin',
            'focus_keyword': 'c√°t t√¥',
            'meta_title': 'Ph√¢n bi·ªát c√°t t√¥ v√† c√°t x√¢y | T∆∞ v·∫•n ch·ªçn c√°t',
            'meta_description': 'So s√°nh chi ti·∫øt c√°t t√¥ v√† c√°t x√¢y. T∆∞ v·∫•n ch·ªçn lo·∫°i c√°t ph√π h·ª£p cho t·ª´ng c√¥ng tr√¨nh x√¢y d·ª±ng.'
        },
        {
            'title': 'B·∫£ng gi√° c√°t x√¢y d·ª±ng m·ªõi nh·∫•t 2025',
            'slug': 'bang-gia-cat-xay-dung-2025',
            'excerpt': 'C·∫≠p nh·∫≠t b·∫£ng gi√° c√°t x√¢y d·ª±ng, c√°t t√¥, c√°t s√†ng m·ªõi nh·∫•t th·ªã tr∆∞·ªùng nƒÉm 2025',
            'content': '''<p>Gi√° c√°t x√¢y d·ª±ng dao ƒë·ªông t√πy theo t·ª´ng lo·∫°i, ch·∫•t l∆∞·ª£ng v√† khu v·ª±c.</p>
            <h2>B·∫£ng gi√° c√°t x√¢y d·ª±ng 2025</h2>
            <p>- C√°t x√¢y h·∫°t to: 180,000 - 200,000ƒë/m¬≥</p>
            <p>- C√°t x√¢y h·∫°t v·ª´a: 170,000 - 190,000ƒë/m¬≥</p>
            <p>- C√°t t√¥ m·ªãn: 190,000 - 220,000ƒë/m¬≥</p>
            <p>- C√°t s√†ng cao c·∫•p: 210,000 - 240,000ƒë/m¬≥</p>
            <p>- C√°t th√¥: 160,000 - 180,000ƒë/m¬≥</p>
            <h2>L∆∞u √Ω khi mua c√°t</h2>
            <p>Gi√° c√°t c√≥ th·ªÉ thay ƒë·ªïi theo m√πa v·ª•, khu v·ª±c v√† kh·ªëi l∆∞·ª£ng ƒë·∫∑t h√†ng. ƒê·∫∑t h√†ng s·ªë l∆∞·ª£ng l·ªõn s·∫Ω ƒë∆∞·ª£c gi·∫£m gi√°.</p>''',
            'author': 'Admin',
            'focus_keyword': 'gi√° c√°t x√¢y d·ª±ng',
            'meta_title': 'B·∫£ng gi√° c√°t x√¢y d·ª±ng 2025 | Gi√° t·ªët nh·∫•t',
            'meta_description': 'B·∫£ng gi√° c√°t x√¢y d·ª±ng, c√°t t√¥, c√°t s√†ng m·ªõi nh·∫•t 2025. Giao h√†ng nhanh, gi√° t·ªët nh·∫•t th·ªã tr∆∞·ªùng.'
        }
    ]

    for blog_data in blogs_data:
        if not Blog.query.filter_by(slug=blog_data['slug']).first():
            blog = Blog(**blog_data, is_active=True)
            blog.calculate_reading_time()
            db.session.add(blog)
            print(f"‚úÖ Blog: {blog_data['title']}")

    db.session.commit()

    # ==================== FAQs ====================
    faqs_data = [
        {
            'question': 'C√°t x√¢y d·ª±ng c√≥ nh·ªØng lo·∫°i n√†o?',
            'answer': 'C√≥ 4 lo·∫°i ch√≠nh: C√°t th√¥ (ƒë·ªï m√≥ng), C√°t x√¢y (x√¢y t∆∞·ªùng), C√°t t√¥ (ho√†n thi·ªán), C√°t s√†ng (cao c·∫•p).',
            'order': 1
        },
        {
            'question': 'Gi√° c√°t x√¢y d·ª±ng bao nhi√™u ti·ªÅn 1m¬≥?',
            'answer': 'Gi√° dao ƒë·ªông 160,000 - 220,000ƒë/m¬≥ t√πy lo·∫°i. Li√™n h·ªá ƒë·ªÉ c√≥ gi√° t·ªët nh·∫•t.',
            'order': 2
        },
        {
            'question': 'L√†m sao bi·∫øt c√°t ch·∫•t l∆∞·ª£ng t·ªët?',
            'answer': 'C√°t t·ªët c√≥ m√†u v√†ng nh·∫°t, h·∫°t ƒë·ªÅu, s·∫°ch, kh√¥ng b√πn ƒë·∫•t, ƒë·ªô ·∫©m v·ª´a ph·∫£i.',
            'order': 3
        },
        {
            'question': 'C√≥ giao h√†ng t·∫≠n n∆°i kh√¥ng?',
            'answer': 'C√≥, ch√∫ng t√¥i giao h√†ng t·∫≠n c√¥ng tr√¨nh trong b√°n k√≠nh 50km.',
            'order': 4
        },
        {
            'question': '1 xe t·∫£i ch·ªü ƒë∆∞·ª£c bao nhi√™u m¬≥ c√°t?',
            'answer': 'Xe 5 t·∫•n ch·ªü 3-4m¬≥, xe 8 t·∫•n ch·ªü 5-6m¬≥, xe 15 t·∫•n ch·ªü 10-12m¬≥.',
            'order': 5
        }
    ]

    for faq_data in faqs_data:
        if not FAQ.query.filter_by(question=faq_data['question']).first():
            faq = FAQ(**faq_data, is_active=True)
            db.session.add(faq)
            print(f"‚úÖ FAQ: {faq_data['question']}")

    db.session.commit()

    print("\nüéâ Seed ho√†n t·∫•t!")
    print(f"üìä Th·ªëng k√™:")
    print(f"  - Users: {User.query.count()}")
    print(f"  - Categories: {Category.query.count()}")
    print(f"  - Products: {Product.query.count()}")
    print(f"  - Banners: {Banner.query.count()}")
    print(f"  - Blogs: {Blog.query.count()}")
    print(f"  - FAQs: {FAQ.query.count()}")